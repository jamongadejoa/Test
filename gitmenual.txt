1. github : 소스코드를 저장하는 클라우드 공간. 공유가능. 협업 가능.

- repository 생성하기


GitHub: Let’s build from here
GitHub is where over 100 million developers shape the future of software, together. Contribute to the open source community, manage your Git repositories, review code like a pro, track bugs and fea...

github.com

2. git 설치

- 소스코드를 로컬 컴퓨터와 gitHub의 Repositery 사이에 전송하는 역할을 함

 
Git
About The advantages of Git compared to other source control systems. Documentation Command reference pages, Pro Git book content, videos and other material. Downloads GUI clients and binary releases for all major platforms. Community Get involved! Bug reporting, mailing list, chat, development and ...

git-scm.com

3. 터미널 설정

- 시작 - Git Bash 클릭

- 환경설정하기

$ git config --global user.name  "사용자이름"             ex> "csKo"

   git config user.name

$ git config --global user.email  "사용자 이메일주소"    ex> "silla7@naver.com"

   git config user.email

$ git config --list  (환경설정 내용에서 name과 email 확인)

$ code . (vscode와 연결)

​

4. VS-Code에서  terminal - New terminal

$ git init (로컬 Git 저장소 생성 및 초기화)

$ git add . (전부다 staging Area(Index) 에 올림)

   git add index.jsp (index.jsp만 staging에 올림)

$ git status (현재 브랜치(main)와 커밋 상태, 작업 중인 파일의 상태 확인)

$ git commit -m "07101430csko commit"  (히스토리 생성, 인덱스에 추가된 변경 사항을 이력에 추가)

$ git remote add origin https://github.com/thebrains27/shrd01261.git  (로컬 Git 저장소를Repository와 연결)

$ git remote -v   (연결확인)

$ git push origin master    (GitHub의 master branch로 소스 코드를 보냄)

   GitHub 에서 새로고침으로 확인

$ 소스코드를 수정 한 후 

$ git add . 

$ git status

$ git commit -m "07101450csko commit"

$ git push origin master

새로고침으로 확인

(이전버전과 현재 버전 확인 가능) 
[출처] Git & GitHub 특강 (고청심교수 홈페이지) | 작성자 고청심교수